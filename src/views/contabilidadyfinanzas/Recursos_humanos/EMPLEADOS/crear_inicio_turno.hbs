
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Inicio de Turno</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC0hXNcXbOKN7qb82PFmr8WVVN_eIYfSoQ&libraries=places&callback=initMap&loading=lazy" async defer></script>
<style>
* {
  box-sizing: border-box;
}

body {
  font-family: 'Segoe UI', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f4f6f9;
  color: #333;
  overflow-x: hidden;
}

h1 {
  text-align: center;
  margin: 30px 0 10px;
  color: #2c3e50;
  font-size: 2rem;
  font-weight: bold;
}

h2 {
  text-align: center;
  color: #34495e;
  margin: 20px 0;
  font-size: 1.5rem;
}

.container {
  max-width: 960px;
  padding: 20px;
  margin: auto;
}

form {
  background-color: #ffffff;
  padding: 30px;
  border-radius: 12px;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);
  width: 100%;
}

label {
  font-size: 0.95rem;
  margin-bottom: 6px;
  display: block;
  color: #2c3e50;
  font-weight: 500;
}

input, select {
  width: 100%;
  padding: 10px 14px;
  margin-bottom: 15px;
  border: 1px solid #ced4da;
  border-radius: 8px;
  font-size: 1rem;
  background-color: #fdfdfd;
  transition: border-color 0.3s;
}

input:focus, select:focus {
  border-color: #4aa276;
  outline: none;
}

button {
  width: 100%;
  padding: 14px;
  background-color: #4aa276;
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1.1rem;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.3s;
}

button:hover {
  background-color: #3b8b64;
}

#map {
  height: 400px;
  width: 100%;
  border-radius: 12px;
  margin-top: 20px;
  border: 1px solid #dcdcdc;
}

/* Asegura que la tabla sea desplazable en pantallas pequeñas */
.table-responsive {
  overflow-x: auto;
  margin-top: 20px;
}

table {
  width: 100%;
  border-collapse: collapse;
  min-width: 600px;
}

th, td {
  padding: 10px 12px;
  text-align: left;
  border: 1px solid #dee2e6;
  font-size: 0.95rem;
}

th {
  background-color: #e9f5ef;
  color: #2c3e50;
}

input[type="time"] {
  font-size: 0.95rem;
  padding: 8px 10px;
  border: 1px solid #ced4da;
  border-radius: 6px;
}

@media (max-width: 768px) {
  h1 {
    font-size: 1.6rem;
  }

  h2 {
    font-size: 1.3rem;
  }

  th, td {
    font-size: 0.9rem;
  }

  .container {
    padding: 15px;
  }

  form {
    padding: 20px;
  }

  button {
    font-size: 1rem;
  }
}
.horario-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
  margin-top: 20px;
}

.dia-item {
  background-color: #ffffff;
  border: 1px solid #dcdcdc;
  border-radius: 12px;
  padding: 15px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
}

.dia-item h3 {
  font-size: 1.1rem;
  color: #2c3e50;
  margin-bottom: 10px;
  border-bottom: 1px solid #eee;
  padding-bottom: 4px;
}

.dia-item label {
  display: block;
  font-size: 0.9rem;
  margin: 8px 0 4px;
  color: #555;
}

</style>
</head>
<body onload="initMap()">
  <div class="container">
        <h1>Crear Inicio de Turno</h1>

    <form action="/guardar_turno" method="POST">
        <label for="usuario">Seleccionar Usuario:</label>
 <select id="usuario" name="user_id" class="form-select" required readonly disabled>
  {{#each usuarios}}
    <option value="{{this.id}}" selected>{{this.name}}</option>
  {{/each}}
</select>

<!-- Agregar un input hidden para que el valor sí se envíe en el formulario -->
<input type="hidden" name="user_id" value="{{usuarios.[0].id}}">
        <br><br>
        <h2>Configurar Horarios</h2>
<div>
<div class="horario-grid">
  <div class="dia-item">
    <h3>Lunes</h3>
    <label>Hora Entrada</label>
    <input type="time" name="lunes_entrada">
    <label>Hora Salida</label>
    <input type="time" name="lunes_salida">
  </div>

  <div class="dia-item">
    <h3>Martes</h3>
    <label>Hora Entrada</label>
    <input type="time" name="martes_entrada">
    <label>Hora Salida</label>
    <input type="time" name="martes_salida">
  </div>

  <div class="dia-item">
    <h3>Miércoles</h3>
    <label>Hora Entrada</label>
    <input type="time" name="miercoles_entrada">
    <label>Hora Salida</label>
    <input type="time" name="miercoles_salida">
  </div>

  <div class="dia-item">
    <h3>Jueves</h3>
    <label>Hora Entrada</label>
    <input type="time" name="jueves_entrada">
    <label>Hora Salida</label>
    <input type="time" name="jueves_salida">
  </div>

  <div class="dia-item">
    <h3>Viernes</h3>
    <label>Hora Entrada</label>
    <input type="time" name="viernes_entrada">
    <label>Hora Salida</label>
    <input type="time" name="viernes_salida">
  </div>

  <div class="dia-item">
    <h3>Sábado</h3>
    <label>Hora Entrada</label>
    <input type="time" name="sabado_entrada">
    <label>Hora Salida</label>
    <input type="time" name="sabado_salida">
  </div>

  <div class="dia-item">
    <h3>Domingo</h3>
    <label>Hora Entrada</label>
    <input type="time" name="domingo_entrada">
    <label>Hora Salida</label>
    <input type="time" name="domingo_salida">
  </div>
</div>

</div>

<br>

        <label for="direccion">Dirección:</label>
        <input type="text" id="direccion" name="direccion" placeholder="Busca una dirección" required>
        <br><br>

        <label style="display: none;" for="latitud">Latitud:</label>
        <input   style="display: none;" type="text" id="latitud" name="latitud" placeholder="Ejemplo: 4.609710" readonly>
        <br><br>

        <label  style="display: none;"  for="longitud">Longitud:</label>
        <input   style="display: none;" type="text" id="longitud" name="longitud" placeholder="Ejemplo: -74.081750" readonly>
        <br><br>

      <label   style="display: none;" for="rango">Rango (metros):</label>
<input style="display: none;"   type="number" id="rango" name="rango" step="1" placeholder="Ejemplo: 500" value="500"  required>

        <br><br>
        <div id="map"></div>
        <br>
        {{#if mensaje}}
    <p>{{mensaje}}</p> <!-- Muestra el mensaje -->
{{/if}}
        <button type="submit">Guardar Turno</button>
    </form>
</div> <!-- cierre de .container -->

<script>
        let map, marker, autocomplete, circle;

        function initMap() {
            const defaultLocation = { lat: 4.609710, lng: -74.081750 }; 
            map = new google.maps.Map(document.getElementById("map"), {
                center: defaultLocation,
                zoom: 13,
            });

            marker = new google.maps.Marker({
                position: defaultLocation,
                map: map,
            });

            circle = new google.maps.Circle({
                map: map,
                radius: 500,
                fillColor: "#FF0000",
                editable: true,
                draggable: true,
            });
            circle.setCenter(defaultLocation);

            autocomplete = new google.maps.places.Autocomplete(document.getElementById("direccion"));
            autocomplete.setFields(["geometry", "name"]);

            autocomplete.addListener("place_changed", function() {
                const place = autocomplete.getPlace();
                if (place.geometry) {
                    const lat = place.geometry.location.lat();
                    const lng = place.geometry.location.lng();
                    map.setCenter(place.geometry.location);
                    map.setZoom(15);
                    marker.setPosition(place.geometry.location);
                    document.getElementById("latitud").value = lat;
                    document.getElementById("longitud").value = lng;
                    circle.setCenter(place.geometry.location);
                }
            });

   google.maps.event.addListener(circle, 'radius_changed', function() {
    const radiusInMeters = circle.getRadius();
    document.getElementById("rango").value = radiusInMeters.toFixed(0);
});

document.getElementById("rango").addEventListener("input", updateCircleRadius);

function updateCircleRadius() {
    const rangoMetros = parseFloat(document.getElementById("rango").value);
    if (!isNaN(rangoMetros) && rangoMetros > 0) {
        circle.setRadius(rangoMetros);
    }
}
}



    </script>



</body>
</html>
