<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Inicio de Labores</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f5f7fa;
      font-family: 'Inter', sans-serif;
    }

    .card {
      max-width: 500px;
      margin: 100px auto;
      border-radius: 16px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      padding: 2rem;
      background: #fff;
    }

    .card-header h1 {
      font-size: 24px;
      font-weight: 700;
      color: #056734;
    }

    .card-header p {
      color: #6c757d;
      margin-bottom: 1rem;
    }

    .btn-iniciar, .btn-finalizar {
      width: 100%;
      padding: 12px;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 600;
      transition: 0.3s;
    }

    .btn-iniciar {
      background-color: #056734;
      color: #fff;
      margin-bottom: 1rem;
    }

    .btn-iniciar:hover {
      background-color: #045129;
    }

    .btn-finalizar {
      background-color: #94BD0D;
      color: #fff;
    }

    .btn-finalizar:hover {
      background-color: #7ca800;
    }

    .btn-flotante {
      position: fixed;
      bottom: 24px;
      right: 24px;
      background-color: #fff;
      border: 2px solid #056734;
      border-radius: 50%;
      padding: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
      transition: 0.3s;
    }

    .btn-flotante:hover {
      background-color: #f1f3f5;
    }

    .btn-flotante img {
      width: 32px;
      height: 32px;
    }
  </style>
</head>
<body>

  <div class="card">
    <div class="card-header text-center">
      <h1>Bienvenido, {{nombreUsuario}}</h1>
      <p>Selecciona una acción para continuar:</p>
    </div>
    <div class="card-body">
      <!-- Formulario para iniciar turno -->
      <form id="form-iniciar">
        <input type="hidden" name="user_id" value="{{userId}}">
        <input type="hidden" name="latitud">
        <input type="hidden" name="longitud">

        <!-- Mostrar botón si el turno no ha sido iniciado -->
        {{#if mostrarBotonIniciar}} 
          <button type="submit" class="btn-iniciar">Iniciar Turno</button>
        {{else}}
          <p class="text-success">Ya has iniciado un turno hoy.</p>
        {{/if}}
      </form>

      <!-- Formulario para finalizar turno -->
      <form id="form-finalizar">
        <input type="hidden" name="user_id" value="{{userId}}">
        <input type="hidden" name="latitud">
        <input type="hidden" name="longitud">

        <!-- Mostrar botón si el turno ha sido iniciado pero no finalizado -->
        {{#if mostrarBotonFinalizar}} 
          <button type="submit" class="btn-finalizar">Finalizar Turno</button>
        {{else}}
          <p class="text-danger">El turno ya ha sido cerrado o no se ha iniciado.</p>
        {{/if}}
      </form>
    </div>
  </div>

  <!-- Botón flotante para reportar error -->
  <button class="btn-flotante" title="Reportar error">
    <img src="/imagenes/chatbot-removebg-preview.png" alt="Icono Reportar">
  </button>

  <script>
    // Función para enviar formularios con la ubicación
    function enviarFormulario(url, form) {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(async function (position) {
          const latitud = position.coords.latitude;
          const longitud = position.coords.longitude;

          form.querySelector('input[name="latitud"]').value = latitud;
          form.querySelector('input[name="longitud"]').value = longitud;

          const formData = new FormData(form);

          try {
            const response = await fetch(url, {
              method: 'POST',
              body: JSON.stringify(Object.fromEntries(formData)),
              headers: {
                'Content-Type': 'application/json'
              }
            });

            const result = await response.json();

            if (response.ok) {
              alert(result.message || "Acción realizada con éxito.");
              window.location.reload();
            } else {
              alert(result.error || "Hubo un error al procesar la solicitud.");
            }
          } catch (error) {
            console.error(error);
            alert("Error en el servidor.");
          }
        }, function () {
          alert("Error al obtener la ubicación.");
        });
      } else {
        alert("Geolocalización no soportada en este dispositivo.");
      }
    }

    // Manejar el envío del formulario de inicio de turno
    document.getElementById('form-iniciar').addEventListener('submit', function (e) {
      e.preventDefault();
      enviarFormulario('/turnos/iniciar', this);
    });

    // Manejar el envío del formulario de cierre de turno
    document.getElementById('form-finalizar').addEventListener('submit', function (e) {
      e.preventDefault();
      enviarFormulario('/turnos/cerrar', this);
    });

    // Función para enviar ubicación por WhatsApp
    document.querySelector('.btn-flotante').addEventListener('click', function () {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function (position) {
          let mensaje = `Estoy presentando error con mi inicio o cierre de turno. Comparto ubicación para garantizar mi punto geográfico.`;
          let numeroWhatsapp = "+573156703770";
          let url = `https://wa.me/${numeroWhatsapp}?text=${encodeURIComponent(mensaje)}`;
          window.location.href = url;
        }, function () {
          alert("No se pudo obtener la ubicación.");
        });
      } else {
        alert("La geolocalización no está disponible en este navegador.");
      }
    });
  </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
